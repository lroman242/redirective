// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructure/storage/storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/lroman242/redirective/domain"
	reflect "reflect"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// SaveTraceResults mocks base method
func (m *MockStorage) SaveTraceResults(traceResults *domain.TraceResults) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTraceResults", traceResults)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveTraceResults indicates an expected call of SaveTraceResults
func (mr *MockStorageMockRecorder) SaveTraceResults(traceResults interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTraceResults", reflect.TypeOf((*MockStorage)(nil).SaveTraceResults), traceResults)
}

// FindTraceResults mocks base method
func (m *MockStorage) FindTraceResults(arg0 interface{}) (*domain.TraceResults, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTraceResults", arg0)
	ret0, _ := ret[0].(*domain.TraceResults)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindTraceResults indicates an expected call of FindTraceResults
func (mr *MockStorageMockRecorder) FindTraceResults(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTraceResults", reflect.TypeOf((*MockStorage)(nil).FindTraceResults), arg0)
}
